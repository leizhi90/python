# -*- conding:utf-8 -*-
#字符串格式化
# 使用%
#**** %[(关键字)][转换标记][最小宽度][.精度]转换格式
print("今年是%d年%d月%d日"%(2018,3,23))
print('八进制%o'%10)
print('十六进制%x'%10)
print('十六进制%X'%10)
# %f %F 默认精度为6 特殊值对应的大小写
print('浮点类型%f'%2.3)
print('科学计数法%e,%E'%(2.3,2.3))
print('根据情况进行显示转换幂<-4或>6为科学计数法%g,%G'%(0.333333,0.333333333))
print('显示一个字符替换一个字符或者数值%c,%c'%('a',69))
# %a, %s, %r  格式化使用ascii，str，repr函数进行处理。
print("%a,%s,%r"%("aaa中", "abc", "abc"))
# %% 转义，表示一个普通的%，一个不会被解析为占位符开始的%。
print("%a,%%c"%("aaa"))

# 转换标记
# 在数据前加上必要的前缀 比如：进制，保留小数点，保留0 补充  对齐
#关键字
data = {"name": "张三", "age":30,'h':180}
print("%(name)s,%(age)d"%data)
# 最小宽度与精度
print("%10.4f"%1.3)

# 动态模板
# 最小宽度与精度也可以不指定，使用*占位，然后，通过替换值元组来进行传递（指定值）
print("%*.*f"%(10, 4, 1.3))
print(id(None))